

@{
    ViewBag.Title = "Index";
}
@model PagedList.IPagedList<BkEmployeePro.Models.UserInput>

<head>
    <style>
        table {
            width: 100%;
        }

        table, th, td {
            border: 1px solid black;
        }
    </style>
</head>


@using (Html.BeginForm("Index", "Employee", FormMethod.Post, new { @id = "formid" }))
{

    <div style="float:right ; width:30%; height:20%; margin:5px; padding-top:200px">

        @Html.TextBox("searchemployeestring", null, new { @class = "form-control input-circle", placeholder = "Search" })

    </div>
    @*<div style="float:none; margin:3px">
            <a href="@Url.Action("Create", "Employee")">Create</a>

        </div>
        <br />*@
    <div>
        @if (Model != null && Model.Count > 0)
        {
            <table class="table" id="mytable">

                <tr>
                    <th>EID</th>
                    <th>Name</th>
                    <th>Age</th>
                    <th>Qualification</th>
                    <th>Position</th>
                    <th>JoiningDate</th>
                    <th>Salary</th>
                    <th>Action</th>
                </tr>

                @foreach (var std in Model)
                {
                    <tr>
                        <td>@std.EID</td>
                        <td>@std.Name</td>
                        <td>@std.Age</td>
                        <td>@std.Qualification</td>
                        <td>@std.Position</td>
                        <td>@std.JoiningDate</td>
                        <td>@std.salary</td>

                        <td>
                            @Html.ActionLink("Edit", "Edit", new { Id = std.EID }) |
                            @Html.ActionLink("Details", "Details", new { Id = std.EID }) |
                            @*@Html.ActionLink("DeleteEmployee", "DeleteEmployee", new { EID = std.EID })*@
                            <button onclick="DeleteEmployees(@std.EID)">Delete</button>

                        </td>

                    </tr>
                }

            </table>
        }
        else
        {
            <p>OOPS! EMPTY..!</p>
        }
        <div id="contentPager" class="paginationDigit borderTop">
            <div class="row">
                @{var itemsPerPageList = new SelectList(new List<int> { 5, 10, 20 }, selectedValue: 4);}
                <div class="col-xs-4">
                    Show
                    @Html.DropDownList("ItemsPerPage", itemsPerPageList, new { @id = "ItemsPerPageList" })
                    entries
                </div>
                <div class="col-xs-4">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>

                <div class="col-xs-12 col-lg-4 col-sm-12">
                    <div class="pull-right">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="portlet-box">
            <div class="portlet-body" id="divEmployeesList"></div>
        </div>
    </div>
    <input type="hidden" id="hdn_Page" />
                    }

@*<div id="divemployee">

    </div>*@

@*<script>

       $(document).ready(function () {

            loadEmployee();
        });
        //Search Box
     $("#SearchByJquery").click(function () {
                    loadEmployee();
                });

        //search box enter button click event
     $("#formid").keypress(function (e) {
         debugger;
                    KCode = e.keyCode || e.charCode
                    if (KCode == 13) {
                        $("#btnemployee").click();
                        return false;
                    }
                });


        //Load Employee Records
     function loadEmployee() {
                    $.ajax({
                        url: '@Url.Action("GetEmployeeList", "Employee")',
                        type: "Get",
                        data: { searchemployeestring: $("#SearchByJquery").val() },
                        cache: false,
                        success: function (data) {
                            $("#divemployee").html(data);
                        }
                    });
                }
    </script>*@

<script>
    function LoadEmployee() {
        //   debugger;
        var items = sessionStorage.getItem("ItemsPerPageList");
        if (items == "undefined") {
            items = null;
        }
        var page = sessionStorage.getItem("hdn_Page");
        //var items = $("#ItemsPerPageList").val();

        $.ajax({
            url: '@Url.Action("Index", "Employee")',
            type: 'POST',
            data: { page: page, itemsPerPage: items },
            cache: false,
            success: function (result) {
                $('#divEmployeesList').html(result);
            }
        });
       }

</script>

<script>
$(document).ready(function(){
    $("tr:odd").css("background-color", "pale-blue");
    $("tr:even").css("background-color", "Azure");
});
</script>
<script>
    $("#createHMSRegistration").click(function () {
        $("#divmodels").removeClass();
        $("#divmodels").addClass("modal-dialog modal-lg");
    });
</script>
<script>

    function DeleteEmployees(id) {
        debugger;
        $.ajax({
            url: '@Url.Action("DeleteEmployee", "Employee")',
            type: "POST",
            data: { id: id },
            success: function (data) {
            if (data.status == 0) {
            //CloseModalPopUp();
                ShowToasterMessage('success', 'Employee Deleted Successfully', 'success');
            //LoadEmployee()

            return false;
            }
            if (data.status == 1) {
            ShowToasterMessage('error', 'Error Occured While Delete Emloyee', 'Error');
            return false;
            }
            }
            });
    }
</script>








